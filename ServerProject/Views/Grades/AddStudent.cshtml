@model ServerProject.Models.StudentGrade

@{
    ViewData["Title"] = "Create";
    List<Students> list = ViewBag.Funds as List<Students>;
}

<h2>Create</h2>
<h4>StudentGrade</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <div class="alert-success">@TempData["succ"]</div>
        <div class="alert-danger">@TempData["fail"]</div>
        <form asp-action="AddStudent">
            <div asp-validation-summary="All" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="RollNumber" class="control-label"></label>
                <select asp-for="RollNumber" class="form-control">
                    @foreach (var ro in list)
                    {
                        <option value="@ro.RollNumber">@ro.Accounts.UserName - @ro.RollNumber</option>
                    }
                </select>
            </div>
            <div class="form-group">
                <input type="hidden" asp-for="GradeId" value="@ViewData["ID"]" />
            </div>
            <div class="form-group">
                <label asp-for="JoinAt" class="control-label"></label>
                <input asp-for="JoinAt" class="form-control" />

            </div>
            <div class="form-group">
                <label asp-for="LeftAt" class="control-label"></label>
                <input asp-for="LeftAt" class="form-control" />

            </div>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Details/@ViewData["ID"]">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
