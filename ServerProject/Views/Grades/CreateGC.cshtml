@model ServerProject.Models.GradeCourse

@{
    ViewData["Title"] = "Create";
}

<h2>Create</h2>

<h4>GradeCourse</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <div class="alert-success">@TempData["succ"]</div>
        <div class="alert-danger">@TempData["fail"]</div>
        <form asp-action="CreateGC">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <input type="hidden" asp-for="GradeId" value="@ViewData["ID"]"/>
            </div>
            <div class="form-group">
                <label asp-for="CourseId" class="control-label"></label>
                <select asp-for="CourseId" class="form-control" asp-items="ViewBag.CourseId"></select>
            </div>
            <div class="form-group">
                <label asp-for="StartTime" class="control-label"></label>
                <input asp-for="StartTime" class="form-control"/>
                <span asp-validation-for="StartTime" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="EndTime" class="control-label"></label>
                <input asp-for="EndTime" class="form-control"/>
                <span asp-validation-for="EndTime" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default"/>
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Details/@ViewData["ID"]">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
